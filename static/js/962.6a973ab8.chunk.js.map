{"version":3,"file":"static/js/962.6a973ab8.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (key) => startsAsVariableToken(key) && singleCssVariableRegex.test(key);\nconst singleCssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)$/i;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\nconst complexRegex = /(var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\))|(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))|((-)?([\\d]*\\.?[\\d])+)/gi;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const matchedValues = originalValue.match(complexRegex) || [];\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    for (let i = 0; i < matchedValues.length; i++) {\n        const parsedValue = matchedValues[i];\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n    }\n    const tokenised = originalValue.replace(complexRegex, SPLIT_TOKEN);\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { mix } from '../../../utils/mix/index.mjs';\nimport { pipe } from '../../../utils/pipe.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.6\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","_createRenderBatcher","createRenderBatcher","queueMicrotask","microtask","schedule","cancel","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","postRender","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","getValueAsType","type","transform","clamp","min","max","number","parse","parseFloat","alpha","scale","default","sanitize","Math","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","frame","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","_definition","progress","from","to","toFromDifference","mixNumber","hueToRgb","q","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","color","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","matchedValues","indexes","var","types","parsedValue","push","parseComplexValue","createTransformer","_analyseComplexValue","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","_toConsumableArray","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","warning","mixer","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","interpolate","splice","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","now","clearTime","time","frameData","MotionGlobalConfig","performance","newTime","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","calcGeneratorDuration","generator","Infinity","decay","tween","percentToProgress","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","notify","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","pauseAnimation","stopAnimation","_this$getProps2","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps3","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","getAnimationState","_this$getProps4","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps8","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps9","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps10","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","_this5","dragKey","externalMotionValue","_this6","_projection$layout$la","_this7","_this$getProps11","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this7$constraints$ax","_this8","stopPointerListener","_this8$getProps","_this8$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","read","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}