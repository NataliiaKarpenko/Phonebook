{"version":3,"file":"static/js/98.477392a2.chunk.js","mappings":"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","sources":["pages/AnimatedPage.jsx","utils/createListItemMotion.js","components/ContactsPageComponent/InputEl.jsx","utils/validateTelephone.js","components/ContactsPageComponent/AddContactForm.jsx","components/ContactsPageComponent/ContactModal/TelInputPatternForm.jsx","components/ContactsPageComponent/ContactModal/NameInputTextField.jsx","components/ContactsPageComponent/ContactModal/ContactModal.jsx","components/ContactsPageComponent/ContactItem.jsx","components/ContactsPageComponent/ContactsList.jsx","components/ContactsPageComponent/Filter.jsx","components/ContactsPageComponent/ContactsPageComponent.jsx","pages/ContactsPage.jsx","utils/validateName.js"],"sourcesContent":["import { motion } from 'framer-motion';\n\nconst AnimatedPage = ({ children }) => {\n  const animation = {\n    intial: { opacity: 0, x: 100 },\n    animate: { opacity: 1, x: 0 },\n    exit: { opacity: 0, x: -100 },\n    transition: { duration: 1 },\n  };\n  return (\n    <motion.div\n      variants={animation}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n    >\n      {children}\n    </motion.div>\n  );\n};\nexport default AnimatedPage;\n","export const createListItemMotion = {\n  initial: { scaleY: 0 },\n  animate: { scaleY: 1 },\n  exit: { scaleY: 0 },\n  transition: { ease: 'easeOut', duration: 3 },\n};\n","import { PatternFormat } from 'react-number-format';\nimport { styled } from '@mui/material';\n\nconst style = ({ theme, error }) => `\n\n  width: calc(100% - 24px);\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 10px 12px;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? theme.grey[100] : theme.grey[700]};\n  background: ${\n    theme.palette.mode === 'dark' ? theme.grey[800] : theme.grey[50]\n  };\n\n  border: 1px solid ${\n    error === 'true'\n      ? '#e53935'\n      : theme.palette.mode === 'dark'\n      ? theme.grey[700]\n      : theme.grey[300]\n  };\n  \n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border: 1px solid ${error === 'true' ? '#d32f2f' : theme.blue[400]};\n  }\n\n  \n  &:focus {\n    outline: none; \n    border-color: ${error === 'true' ? '#c62828' : theme.blue[400]};\n    box-shadow: ${\n      error === 'false'\n        ? `0 0 0 3px \n      ${theme.palette.mode} === 'dark'`\n          ? theme.blue[600]\n          : theme.blue[200]\n        : ''\n    };\n    background: ${\n      theme.palette.mode === 'dark' ? theme.grey[700] : theme.grey[100]\n    };\n`;\n\nexport const InputElement = styled('input')`\n  ${style};\n`;\n\nexport const InputPatternFormat = styled(PatternFormat)`\n  ${style};\n`;\n","export const validateTelephone = tel => {\n  const isTelValid = /^\\+\\s\\d{2}\\(\\d{3}\\)\\s\\d{3}-\\d{2}-\\d{2}$/.test(tel);\n\n  const telHelperText = isTelValid\n    ? ''\n    : tel\n    ? \"Telephone number doesn't meet the requested format\"\n    : 'Required';\n\n  return {\n    telHelperText,\n    telErrorState: !isTelValid,\n  };\n};\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Box, Button, List, ListItem, Typography, styled } from '@mui/material';\n\nimport { InputElement, InputPatternFormat } from './InputEl';\nimport { addContact } from 'APIServices.js/APIServices';\nimport { validateName } from 'utils/validateName';\nimport { validateTelephone } from 'utils/validateTelephone';\n\nconst style = {\n  box: {\n    ml: 'auto',\n    mr: 'auto',\n    mb: '50px',\n    width: { sm: '299px', md: '450px' },\n    maxWidth: { xs: '299px', sm: '299px', md: '450px' },\n  },\n  list: { marginBottom: { xs: '30px', md: '40px' } },\n  listItem: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'start',\n    '&:not(:last-child)': { marginBottom: '35px' },\n  },\n  typography: {\n    mb: 0.5,\n    fontSize: { xs: '16px', md: '20px' },\n    fontWeight: 500,\n  },\n  button: {\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  helperText: {\n    position: 'absolute',\n    top: { xs: '75px', md: '80px' },\n    color: '#e53935',\n    fontSize: { xs: '12px', md: '14px' },\n  },\n};\n\nconst Label = styled(Typography)(({ theme }) => ({\n  color: theme.palette.primary.dark,\n}));\n\nexport const AddContactForm = ({ contactsList, setContactsList }) => {\n  const [errorStateName, setErrorStateName] = useState(false);\n  const [helperTextName, setHelperTextName] = useState('');\n\n  const [errorStateTel, setErrorStateTel] = useState(false);\n  const [helperTextTel, setHelperTextTel] = useState('');\n\n  const [number, setNumber] = useState('');\n\n  const onNumberChange = values => {\n    setNumber(values.formattedValue);\n  };\n\n  function checkName(contact) {\n    const isExisting = contactsList?.find(\n      item => item.name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    return isExisting;\n  }\n\n  function checkNumber(contact) {\n    const isExisting = contactsList?.find(\n      item => item.number === contact.number\n    );\n\n    return isExisting;\n  }\n\n  function checkContact(contact) {\n    const isNameExisting = checkName(contact);\n    const isNumberExisting = checkNumber(contact);\n\n    if (isNameExisting) {\n      toast.warn(`${contact.name} is already in the list of contacts`, {\n        toastId: 'checkNameWarn',\n      });\n    } else if (isNumberExisting) {\n      toast.warn(\n        `Telephone number ${contact.number} is already in the list of contacts`,\n        { toastId: 'checkNumberWarn' }\n      );\n    }\n    return {\n      isNameExisting,\n      isNumberExisting,\n    };\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    const name = form.elements.name.value.trim();\n    const telNumber = number;\n\n    const contact = {\n      name,\n      number: telNumber,\n    };\n    const { isNameExisting, isNumberExisting } = checkContact(contact);\n\n    const { nameHelperText, nameErrorState } = validateName(name);\n    setHelperTextName(nameHelperText);\n    setErrorStateName(nameErrorState);\n\n    const { telHelperText, telErrorState } = validateTelephone(telNumber);\n    setHelperTextTel(telHelperText);\n    setErrorStateTel(telErrorState);\n\n    if (\n      !isNameExisting &&\n      !isNumberExisting &&\n      !nameErrorState &&\n      !telErrorState\n    ) {\n      addNewContact(contact);\n\n      form.reset();\n      setNumber('');\n    }\n  };\n\n  const addNewContact = async contact => {\n    try {\n      const response = await addContact(contact);\n\n      if (response.status === 201) {\n        toast.success(\n          `${contact.name} has successfully been added to the contacts`,\n          { toastId: 'addNewContactSuccess' }\n        );\n        const newContacts = [response.data, ...contactsList].sort(\n          (firstContact, secondContact) =>\n            firstContact.name.localeCompare(secondContact.name)\n        );\n        setContactsList(newContacts);\n      }\n    } catch (e) {\n      console.log(e);\n      toast.error('Something has gone wrong. Try again', {\n        toastId: 'addNewContactError',\n      });\n    }\n  };\n  return (\n    <Box\n      component=\"form\"\n      sx={style.box}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={onSubmit}\n    >\n      <List sx={style.list}>\n        <ListItem disablePadding sx={style.listItem}>\n          <Label sx={style.typography}>Name</Label>\n          <InputElement\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, digits, apostrophes, hyphens and spaces\"\n            placeholder=\"Enter a name\"\n            autoComplete=\"off\"\n            error={`${errorStateName}`}\n          />\n          {errorStateName && (\n            <Typography sx={style.helperText}>{helperTextName}</Typography>\n          )}\n        </ListItem>\n        <ListItem disablePadding sx={style.listItem}>\n          <Label sx={style.typography}>Telephone number</Label>\n          <InputPatternFormat\n            type=\"tel\"\n            name=\"number\"\n            format=\"+ ##(###) ###-##-##\"\n            title=\"+ ##(###) ###-##-##\"\n            mask=\"_\"\n            placeholder=\"Enter a telephone number\"\n            autoComplete=\"off\"\n            onValueChange={onNumberChange}\n            value={number}\n            error={`${errorStateTel}`}\n          />\n          {errorStateTel && (\n            <Typography sx={style.helperText}>{helperTextTel}</Typography>\n          )}\n        </ListItem>\n      </List>\n\n      <Button variant=\"contained\" type=\"submit\" sx={style.button}>\n        Add the contact\n      </Button>\n    </Box>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '@mui/material';\nimport { PatternFormat } from 'react-number-format';\n\nexport const TelInputPatternFormat = ({\n  contactNumber,\n  errorStateTel,\n  helperTextTel,\n}) => {\n  const [number, setNumber] = useState(contactNumber);\n  const [focused, setFocused] = useState(false);\n\n  const onNumberChange = e => {\n    const input = e.currentTarget;\n    const value = input.value;\n\n    setNumber(value);\n    setFocused(true);\n  };\n\n  const label = 'Telephone number';\n\n  return (\n    <TextField\n      type=\"tel\"\n      name=\"number\"\n      defaultValue={contactNumber}\n      variant=\"standard\"\n      focused={focused}\n      fullWidth\n      title=\"+ ##(###) ###-##-##\"\n      onChange={onNumberChange}\n      onFocus={() => setFocused(true)}\n      onBlur={() => setFocused(false)}\n      autoComplete=\"off\"\n      error={errorStateTel}\n      label={label}\n      helperText={helperTextTel}\n      sx={{\n        mb: 6,\n        '& .MuiFormHelperText-root.Mui-error': {\n          lineHeight: 1,\n        },\n      }}\n      InputProps={{\n        inputComponent: PatternFormat,\n        inputProps: { format: '+ ##(###) ###-##-##', mask: '_' },\n      }}\n      InputLabelProps={{\n        shrink: number || focused ? true : false,\n        sx: { fontSize: { xs: '14px', md: '16px' } },\n      }}\n    />\n  );\n};\n","import { TextField } from '@mui/material';\n\nexport const NameInputTextField = ({\n  contactName,\n  errorStateName,\n  helperTextName,\n}) => {\n  return (\n    <TextField\n      name=\"name\"\n      label=\"Name\"\n      defaultValue={contactName}\n      variant=\"standard\"\n      error={errorStateName}\n      helperText={helperTextName}\n      fullWidth\n      sx={{\n        mb: 5,\n        '& .MuiFormHelperText-root.Mui-error': {\n          lineHeight: 1,\n        },\n      }}\n      InputLabelProps={{\n        sx: {\n          fontSize: { xs: '14px', md: '16px' },\n        },\n      }}\n    />\n  );\n};\n","import { useState } from 'react';\nimport {\n  Modal,\n  Backdrop,\n  Box,\n  Fade,\n  Button,\n  Typography,\n  styled,\n} from '@mui/material';\n\nimport { validateName } from 'utils/validateName';\nimport { validateTelephone } from 'utils/validateTelephone';\nimport { editContact } from 'APIServices.js/APIServices';\nimport { useIsLoggedIn } from 'components/IsLoggedInContext';\nimport { TelInputPatternFormat } from './TelInputPatternForm';\nimport { NameInputTextField } from './NameInputTextField';\nimport { toast } from 'react-toastify';\n\nconst style = {\n  box: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: { xs: 'calc(100% - 68px)', sm: '250px', md: '300px' },\n    maxWidth: '50%',\n    bgcolor: 'background.paper',\n    border: '2px solid #3d6cb9',\n    borderRadius: 10,\n    boxShadow: 24,\n    p: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  typography: {\n    mb: 1,\n    textAlign: 'center',\n    fontSize: { xs: '18px', md: '20px' },\n    fontWeight: 600,\n  },\n  button: { padding: '6px 40px' },\n};\n\nconst Title = styled(Typography)(({ theme }) => ({\n  color: theme.palette.primary.dark,\n}));\n\nexport default function ContactModal({\n  contactId,\n  contactName,\n  contactNumber,\n  open,\n  setOpen,\n  contactsList,\n  setContactsList,\n}) {\n  const { setIsRefreshing } = useIsLoggedIn();\n  const [errorStateName, setErrorStateName] = useState(false);\n  const [helperTextName, setHelperTextName] = useState('');\n\n  const [errorStateTel, setErrorStateTel] = useState(false);\n  const [helperTextTel, setHelperTextTel] = useState('');\n\n  const onSubmitModalForm = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value.trim();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const { nameHelperText, nameErrorState } = validateName(name);\n    setHelperTextName(nameHelperText);\n    setErrorStateName(nameErrorState);\n\n    const { telHelperText, telErrorState } = validateTelephone(number);\n    setHelperTextTel(telHelperText);\n    setErrorStateTel(telErrorState);\n\n    if (!telErrorState && !nameErrorState) {\n      onEditingContact(contactId, contact);\n      handleModalClose();\n\n      form.reset();\n    }\n  };\n\n  async function onEditingContact(contactId, contact) {\n    setIsRefreshing(true);\n    try {\n      const response = await editContact(contactId, contact);\n\n      if (response.status === 200) {\n        const newContactsList = contactsList.map(item => {\n          if (item.id === contactId) {\n            return response.data;\n          }\n          return item;\n        });\n\n        setContactsList(newContactsList);\n        toast.success('You have edited the contact successfully', {\n          toastId: 'editContactSuccess',\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      toast.error('Something went wrong. Try again, please!', {\n        toastId: 'editContactError',\n      });\n    } finally {\n      setIsRefreshing(false);\n    }\n  }\n\n  const handleModalClose = () => {\n    setOpen(false);\n    setHelperTextName('');\n    setErrorStateName(false);\n    setHelperTextTel('');\n    setErrorStateTel(false);\n  };\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={open}\n      onClose={handleModalClose}\n      closeAfterTransition\n      slots={{ backdrop: Backdrop }}\n      slotProps={{\n        backdrop: {\n          timeout: 500,\n        },\n      }}\n    >\n      <Fade in={open}>\n        <Box\n          sx={style.box}\n          component=\"form\"\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={onSubmitModalForm}\n        >\n          <Title id=\"modal-modal-description\" sx={style.typography}>\n            Edit the contact\n          </Title>\n\n          <NameInputTextField\n            contactName={contactName}\n            errorStateName={errorStateName}\n            helperTextName={helperTextName}\n          />\n          <TelInputPatternFormat\n            contactNumber={contactNumber}\n            errorStateTel={errorStateTel}\n            helperTextTel={helperTextTel}\n          />\n          <Button variant=\"contained\" type=\"submit\" sx={style.button}>\n            Edit\n          </Button>\n        </Box>\n      </Fade>\n    </Modal>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { Avatar, Grid, IconButton, Paper, styled } from '@mui/material';\nimport { stringContactAvatar } from 'utils/createAvatar';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { motion } from 'framer-motion';\n\nimport ContactModal from './ContactModal/ContactModal';\nimport { createListItemMotion } from 'utils/createListItemMotion';\n\nconst style = {\n  grid: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderRadius: '4px',\n    transition: 'scale(1.2) 0.3s ease-in-out',\n    mb: 0.2,\n  },\n  gridItem: {\n    marginLeft: { xs: -0.2, md: -0.5 },\n    display: 'block',\n  },\n  contactNameItem: {\n    justifyContent: 'start',\n    pl: { xs: 2, md: 0 },\n    p: { xs: 1, md: 2 },\n  },\n  contactNumberItem: {\n    fontSize: { md: '16px', lg: '18px' },\n    pl: 2,\n    height: '100%',\n  },\n  buttonItem: {\n    display: 'flex',\n    justifyContent: 'center',\n    p: 0,\n    height: '100%',\n    background: 'transparent',\n  },\n  iconButton: {\n    minHeight: 0,\n    minWidth: 0,\n    display: 'block',\n    transition: 'all 300ms ease-in-out',\n    '&:hover': {\n      background: 'transparent',\n      transform: 'scale(1.1)',\n    },\n  },\n  icon: { fontSize: { xs: '22px', lg: '25px' } },\n};\n\nconst MuiGrid = styled(Grid)(({ theme }) => ({\n  '&:nth-of-type(even)': {\n    background: theme.palette.secondary.light,\n  },\n  '&:nth-of-type(odd)': {\n    background: theme.palette.secondary.dark,\n  },\n  color: theme.palette.primary.light,\n}));\n\nconst Item = styled(Paper)(({ theme }) => ({\n  color: theme.palette.text.secondary,\n  display: 'flex',\n  alignItems: 'center',\n  gap: '15px',\n  background: 'transparent',\n}));\n\nconst MuiEditIcon = styled(EditIcon)(({ theme }) => ({\n  '&:hover': {\n    fill: theme.palette.secondary.main,\n  },\n}));\n\nconst MuiDeleteIcon = styled(DeleteIcon)(({ theme }) => ({\n  '&:hover': {\n    fill: theme.grey[500],\n  },\n}));\n\nexport const ContactItem = ({\n  contactsList,\n  contactName,\n  contactNumber,\n  contactId,\n  onDeleteIconClick,\n  setContactsList,\n}) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [windowWidth]);\n\n  return (\n    <MuiGrid\n      component={motion.div}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      transition=\"transition\"\n      variants={createListItemMotion}\n      key={contactId}\n      container\n      columnSpacing={0.2}\n      sx={style.grid}\n    >\n      <Grid item xs={8} md={5.5} lg={5} sx={style.gridItem}>\n        <Item sx={style.contactNameItem}>\n          <Avatar {...stringContactAvatar(contactName)} />\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'start',\n              fontSize:\n                windowWidth < 768\n                  ? '14px'\n                  : windowWidth >= 768 && windowWidth < 1440\n                  ? '16px'\n                  : '20px',\n            }}\n          >\n            <span style={{ fontWeight: 600 }}>{contactName}</span>\n            {windowWidth < 768 && (\n              <span style={{ fontStyle: 'italic' }}>{contactNumber}</span>\n            )}\n          </div>\n        </Item>\n      </Grid>\n      {windowWidth >= 768 && (\n        <Grid item xs={4} md={4.5} lg={4}>\n          <Item sx={style.contactNumberItem}>☎️ {contactNumber}</Item>\n        </Grid>\n      )}\n      <Grid item xs={2} md={1} lg={1.5}>\n        <Item sx={style.buttonItem}>\n          <IconButton\n            onClick={() => setOpen(true)}\n            aria-label=\"edit\"\n            color=\"primary\"\n            sx={style.iconButton}\n          >\n            <MuiEditIcon sx={style.icon} />\n          </IconButton>\n        </Item>\n      </Grid>\n\n      <Grid item xs={2} md={1} lg={1.5}>\n        <Item sx={style.buttonItem}>\n          <IconButton\n            onClick={() => onDeleteIconClick(contactId)}\n            aria-label=\"delete\"\n            sx={style.iconButton}\n          >\n            <MuiDeleteIcon sx={style.icon} />\n          </IconButton>\n        </Item>\n      </Grid>\n      <ContactModal\n        open={open}\n        setOpen={setOpen}\n        contactId={contactId}\n        contactName={contactName}\n        contactNumber={contactNumber}\n        contactsList={contactsList}\n        setContactsList={setContactsList}\n      />\n    </MuiGrid>\n  );\n};\n","import { Grid } from '@mui/material';\nimport { AnimatePresence } from 'framer-motion';\nimport { toast } from 'react-toastify';\n\nimport { ContactItem } from './ContactItem';\nimport { deleteContact } from 'APIServices.js/APIServices';\n\nconst style = {\n  ml: 'auto',\n  mr: 'auto',\n  mb: '50px',\n  width: { md: '600px', lg: '900px' },\n  maxWidth: { xs: '600px', lg: '900px' },\n  position: 'relative',\n};\n\nexport const ContactsList = ({\n  filteredContacts,\n  contactsList,\n  setContactsList,\n}) => {\n  const onDeleteIconClick = async contactId => {\n    try {\n      const response = await deleteContact(contactId);\n\n      if (response.status === 200) {\n        const newContactList = filteredContacts.filter(\n          contact => contact.id !== contactId\n        );\n\n        setContactsList(newContactList);\n        localStorage.removeItem('token');\n\n        toast.success(\n          `${response.data.name} has been successfully deleted from the contacts`,\n          { toastId: 'onDeleteIconClickSuccess' }\n        );\n      }\n    } catch (e) {\n      console.log(e);\n      toast.error('Something has gone wrong. Try again', {\n        toastid: 'onDeleteIconClickError',\n      });\n    }\n  };\n\n  return (\n    <Grid container spacing={1} sx={style}>\n      <AnimatePresence>\n        {filteredContacts?.map(contact => {\n          return (\n            <ContactItem\n              key={contact.id}\n              contactsList={contactsList}\n              contactName={contact.name}\n              contactNumber={contact.number}\n              contactId={contact.id}\n              onDeleteIconClick={onDeleteIconClick}\n              setContactsList={setContactsList}\n            />\n          );\n        })}\n      </AnimatePresence>\n    </Grid>\n  );\n};\n","import {\n  Box,\n  FormControl,\n  Input,\n  InputAdornment,\n  InputLabel,\n} from '@mui/material';\n\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst style = {\n  box: {\n    ml: 'auto',\n    mr: 'auto',\n    mb: 5,\n    width: { sm: '200px', md: '300px' },\n    maxWidth: { xs: '200px', sm: '200px', md: '300px' },\n  },\n  input: {\n    '&.MuiInputBase-root.MuiInput-root.MuiInput-underline:hover:before': {\n      borderBottom: '1px solid #1977D3',\n    },\n  },\n};\n\nexport const Filter = ({ handleFilter }) => {\n  return (\n    <Box sx={style.box}>\n      <FormControl variant=\"standard\" sx={{ width: '100%' }}>\n        <InputLabel htmlFor=\"input-with-icon-adornment\">\n          Enter a name\n        </InputLabel>\n        <Input\n          id=\"input-with-icon-adornment\"\n          fullWidth\n          onChange={handleFilter}\n          sx={style.input}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </Box>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { nanoid } from 'nanoid';\nimport { Typography, styled } from '@mui/material';\n\nimport { getContacts } from 'APIServices.js/APIServices';\nimport { createListItemMotion } from 'utils/createListItemMotion';\nimport { AddContactForm } from './AddContactForm';\nimport { ContactsList } from './ContactsList';\nimport { Filter } from './Filter';\n\nconst style = {\n  title: {\n    fontSize: { xs: '32px', md: '36px' },\n    fontWeight: 600,\n    textAlign: 'center',\n    marginBottom: 1,\n  },\n  subtitle: {\n    fontSize: { xs: '24px', md: '28px' },\n    fontWeight: 600,\n    textAlign: 'center',\n    marginBottom: 3,\n  },\n  text: {\n    fontSize: { xs: '20px', md: '24px' },\n    fontWeight: 500,\n    textAlign: 'center',\n    marginBottom: 1,\n  },\n};\n\nconst Title = styled(Typography)(({ theme }) => ({\n  color: theme.palette.primary.main,\n}));\n\nconst SubTitle = styled(Typography)(({ theme }) => ({\n  color: theme.palette.primary.light,\n}));\n\nconst Info = styled(Typography)(({ theme }) => ({\n  color: theme.palette.primary.dark,\n}));\n\nexport const ContactsPageComponent = () => {\n  const [contactsList, setContactsList] = useState([]);\n  const [filterValue, setFilterValue] = useState('');\n  const [filteredContacts, setFilteredContacts] = useState([]);\n\n  useEffect(() => {\n    const showContacts = async () => {\n      try {\n        const { data } = await getContacts();\n        setContactsList(data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    showContacts();\n  }, []);\n\n  useEffect(() => {\n    const createFilteredList = () => {\n      const newContactsList = contactsList\n        .filter(contact => contact.name.toLowerCase().includes(filterValue))\n        .sort((firstContact, secondContact) =>\n          firstContact.name.localeCompare(secondContact.name)\n        );\n\n      setFilteredContacts(newContactsList);\n    };\n    createFilteredList();\n  }, [contactsList, filterValue]);\n\n  const handleFilter = e => {\n    const filterInput = e.currentTarget;\n    const value = filterInput.value.trim().toLowerCase();\n    setFilterValue(value);\n  };\n\n  return (\n    <div >\n      <Title variant=\"h1\" sx={style.title}>\n        Phonebook\n      </Title>\n      <AddContactForm\n        contactsList={contactsList}\n        setContactsList={setContactsList}\n      />\n      <SubTitle key={nanoid()} variant=\"h2\" sx={style.subtitle}>\n        Contacts\n      </SubTitle>\n      {contactsList.length === 0 ? (\n        <Info\n          key={nanoid()}\n          component={motion.p}\n          initial=\"initial\"\n          animate=\"animate\"\n          exit=\"exit\"\n          transition=\"transition\"\n          variants={createListItemMotion}\n          sx={style.text}\n        >\n          ⚠️You haven't added any contacts yet\n        </Info>\n      ) : (\n        <div>\n          <Filter handleFilter={handleFilter} />\n          <ContactsList\n            filteredContacts={filteredContacts}\n            setContactsList={setContactsList}\n            contactsList={contactsList}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { ContactsPageComponent } from 'components/ContactsPageComponent/ContactsPageComponent';\nimport AnimatedPage from './AnimatedPage';\n\nconst ContactsPage = () => {\n  return (\n    <AnimatedPage>\n      <ContactsPageComponent />\n    </AnimatedPage>\n  );\n};\n\nexport default ContactsPage;\n","export const validateName = name => {\n  const isNameValid =\n    name.length >= 3 && /^[a-zA-Zа-яА-яіІїЇєЄ0-9'-\\s]+$/.test(name);\n  const nameHelperText = isNameValid\n    ? ''\n    : name\n    ? getNameErrorMessage()\n    : 'Required';\n\n  function getNameErrorMessage() {\n    return name.length < 3\n      ? 'Your name is too short'\n      : 'Name may contain only letters, digits, apostrophes, hyphens and spaces.';\n  }\n\n  return {\n    nameHelperText,\n    nameErrorState: !isNameValid,\n  };\n};\n"],"names":["_ref","children","_jsx","motion","variants","intial","opacity","x","animate","exit","transition","duration","initial","createListItemMotion","scaleY","ease","style","theme","error","concat","palette","mode","grey","blue","InputElement","styled","_templateObject","_taggedTemplateLiteral","InputPatternFormat","PatternFormat","_templateObject2","validateTelephone","tel","isTelValid","test","telHelperText","telErrorState","box","ml","mr","mb","width","sm","md","maxWidth","xs","list","marginBottom","listItem","position","display","flexDirection","alignItems","typography","fontSize","fontWeight","button","marginLeft","marginRight","helperText","top","color","Label","Typography","primary","dark","AddContactForm","_ref2","contactsList","setContactsList","_useState","useState","_useState2","_slicedToArray","errorStateName","setErrorStateName","_useState3","_useState4","helperTextName","setHelperTextName","_useState5","_useState6","errorStateTel","setErrorStateTel","_useState7","_useState8","helperTextTel","setHelperTextTel","_useState9","_useState10","number","setNumber","checkContact","contact","isNameExisting","find","item","name","toLowerCase","checkName","isNumberExisting","checkNumber","toast","toastId","addNewContact","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","response","newContacts","_context","prev","next","addContact","sent","status","data","_toConsumableArray","sort","firstContact","secondContact","localeCompare","t0","console","log","stop","_x","apply","arguments","_jsxs","Box","component","sx","noValidate","autoComplete","onSubmit","e","preventDefault","form","target","elements","value","trim","telNumber","_checkContact","_validateName","validateName","nameHelperText","nameErrorState","_validateTelephone","reset","List","ListItem","disablePadding","type","title","placeholder","format","mask","onValueChange","values","formattedValue","Button","variant","TelInputPatternFormat","contactNumber","focused","setFocused","TextField","defaultValue","fullWidth","onChange","currentTarget","onFocus","onBlur","label","lineHeight","InputProps","inputComponent","inputProps","InputLabelProps","shrink","NameInputTextField","contactName","left","transform","bgcolor","border","borderRadius","boxShadow","p","textAlign","padding","Title","ContactModal","contactId","open","setOpen","setIsRefreshing","useIsLoggedIn","_onEditingContact","newContactsList","editContact","map","id","finish","handleModalClose","Modal","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","Fade","in","_x2","onEditingContact","grid","justifyContent","gridItem","contactNameItem","pl","contactNumberItem","lg","height","buttonItem","background","iconButton","minHeight","minWidth","icon","MuiGrid","Grid","secondary","light","Item","Paper","text","gap","MuiEditIcon","EditIcon","fill","main","MuiDeleteIcon","DeleteIcon","_ref4","ContactItem","_ref5","onDeleteIconClick","window","innerWidth","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","removeEventListener","container","columnSpacing","Avatar","_objectSpread","stringContactAvatar","fontStyle","IconButton","onClick","ContactsList","filteredContacts","newContactList","deleteContact","filter","localStorage","removeItem","toastid","spacing","AnimatePresence","input","borderBottom","Filter","handleFilter","FormControl","InputLabel","htmlFor","Input","startAdornment","InputAdornment","SearchIcon","subtitle","SubTitle","Info","ContactsPageComponent","filterValue","setFilterValue","setFilteredContacts","showContacts","_yield$getContacts","getContacts","includes","createFilteredList","nanoid","length","AnimatedPage","isNameValid"],"sourceRoot":""}